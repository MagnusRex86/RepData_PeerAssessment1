myImage(svd1$u[,1:5]%*% diag(svd1$d[1:5])%*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10]%*% diag(svd1$d[1:10])%*% t(svd1$v[,1:10]))
library(swirl)
swirl()
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1<- subset(ssd, subject=1)
sub1<- subset(ssd, subject==1)
dim(sub1)
names(sub1[,1:12])
myedit("shoXY.R")
myedit("showXY.R")
showMe(1:6)
dist(x[,1:3])
x[,1:3]
mdist(x[,1:3])
mdist
mdist<-dist(sub1[,1:3])
hclustering<-hclust(mdist)
myplclust(hclustering, lab.col= unclass(sub1$activity))
mdist<-dist(sub1[,10:12])
hclustering<-hclust(mdist)
myplclust(hclustering, lab.col= unclass(sub1$activity))
svd1<-svd(scale(sub1[,-c(562,563)]))
svd1$u
dim(svd1$u)
maxCon<-whic.max(svd1$v)
maxCon<-which.max(svd1$v)
maxCon<-which.max(svd1$v[,2])
mdist<-dist(sub1[,10:12])
mdist<-dist(sub1[,c(10:12,maxCon)])
hclustering<-hclust(mdist)
myplclust(hclustering, lab.col= unclass(sub1$activity))
names(sub1[maxCon])
kClust<-kmeans(sub1[,])
kmeans
kClust<-kmeans(sub1[,-c(562,563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust<-kmeans(sub1[,-c(562,563)], centers = 6,nstart = 100)
table(kClust$cluster,sub1$activity)
dim(kClust)
dim(kClust$centers)
which(kClust$size==29)
laying<-which(kClust$size==29)
plot(kClust$centers[laying, 1:12],pch=19,ylab="Laying Cluster")
names(sub1[,3])
names(sub1[,1:3])
walkdown<-which(kClust$size=9)
walkdown<-which(kClust$size==9)
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown, 1:12],pch=19,ylab="Walkdown Cluster")
head(airquality)
xyplot(Ozone~Win, data = airquality)
xyplot(Ozone~wind, data = airquality)
xyplot(Ozone~wind, data = airquality)
xyplot
xyplot(Ozone ~ wind, data = airquality)
xyplot(Ozone ~ Wind, data = airquality)
xyplot(Ozone ~ Wind, data = airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone ~ Wind, data = airquality, pch=8, col="red", main="Big Apple Data")
xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1))
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5,1))
p<-xyplot(Ozone~Wind,data=airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
x.limits(p)
p[[x]]
p
p[["x.limits"]]
table(F)
table(f)
xyplot(y ~ x | f,c(2,1))
xyplot(y ~ x | f, c(2,1))
xyplot(y~x|f, c(2,1))
xyplot(y~x|f, layout=c(2,1))
v1
v2
myeidt("plot1.R")
myedit("plot1.R")
source(pathtofile   , "plot1.R")
source(pathtofile("plot1.R"),local= TRUE
)
myedit("plot2.R")
source(pathtofile("plot1.R"),local= TRUE)
source(pathtofile("plot2.R"),local= TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color,diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"),local = TRUE)
xyplot(price~carat|color*cut, data = diamonds, strip = FALSE, pch = 20, xlab = myxlab,ylab=mylab, main=mymain)
xyplot(price~carat|color*cut, data = diamonds, strip = FALSE, pch = 20, xlab = myxlab,ylab=myylab, main=mymain)
xyplot(price~carat|color*cut, data = diamonds, pch = 20, xlab = myxlab,ylab=myylab, main=mymain)
sample(colors())
sample(colors(),10)
colorRamp(c("red","blue"))
pal <- colorRamp(c("red","blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1<-colorRampPalette(c("red","blue"))
p1(2)
p1(6)
oxcc
0xcc
p2<-colorRampPalette(c("red","yellow"))
p2(2)
p2(10)
showMe(p1(20))
p2(20)
showMe(p2(20))
showMe(p2(2))
p1
?rgb
p3<-colorRampPalette(c("blue","green"),alpha = 5)
p3<-colorRampPalette(c("blue","green"),alpha = 0.5)
p3(5)
plot(x,y,pch=19,col=rgb(0,0.5,0.5))
plot(x,y,pch=19,col=rgb(0,0.5,0.5,0.3))
brewer.pal(3, "BuGn")
cols <- brewer.pal(3, "BuGn")
showMe(cols)
pal<-colorRampPalette(cols)
showMe((pal(3)))
showMe(pal(20))
image(volcano, col=pal(20))
image(volcano, col=p1(20))
str(mpg)
qplot(displ,hwy,data=mpg)
qplot(displ,hwy,data=mpg,col=drv)
qplot(displ,hwy,data=mpg,color=drv)
qplot(displ,hwy,data=mpg,color=drv, geom = c("point","smooth"))
qplot(y=hwy,data=mpg,color=drv)
myhigh
qplot(drv,hwy,data=mpg,geom=geom = "boxplot")
qplot(drv,hwy,data=mpg,geom== "boxplot")
qplot(drv,hwy,data=mpg,geom= "boxplot")
qplot(drv,hwy,data=mpg,geom= "boxplot",color=manufacturer)
qplot(hwy,data=mpg,fill=drv)
qplot(displ, hwy,data=mpg,facets=. ~ drv)
qplot(hwy,data=mpg,facets=. ~ drv, bindwidth=2)
qplot(hwy, data = mpg, facets = drv ~ ., binwidth = 2)
qplot(data - displ, hwy, data=mpg,geom=c("point","smooth"),facets = .~drv)
qplot(displ, hwy, data=mpg,geom=c("point","smooth"),facets = .~drv)
g<-ggplot(mpg, aes(dspl,hwy))
g <- ggplot(mpg, aes(dspl,hwy))
g <- ggplot(mpg, aes(dspl,hwy) )
g <- ggplot(mpg, aes(displ,hwy) )
summary(g)
g+geom_point()
g+geom_point(geom_smooth())
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")+facet_grid()
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swift Rules!")
g+geom_point()+geom_smooth(method="lm") + facet_grid(.~drv)+ ggtitle("Swirl Rules!")
g+geom_point(color="pink",size=4,alpha = 1/2)+geom_smooth(method="lm") + facet_grid(.~drv)+ ggtitle("Swirl Rules!")
g+geom_point(color="pink",size=4,alpha=1/2)
g+geom_point(size=4,alpha=1/2,aes(color=drv))
g+geom_point(size=4,alpha=1/2,aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacement",y="Hwy Mileage")
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")
g + geom_point(aes(color = drv),size = 2,alpha = 1/2) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")
g + geom_point(aes(color = drv),size=2,alpha=1/2) + geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g+geom_point(color=drv)+theme_bw(base_family = "Times")
g+geom_point(color=drv)+theme_bw(base_family = "Times")
g + geom_point(color=drv)+theme_bw(base_family = "Times")
g
g + geom_point(aes(color = drv)) + theme_bw(base_family="Times")
warnigns()
warnings()
plot(myx,myy,type = "l", ylim = c(-3,3))
g+ggplot(testdat,aes(x=myx,y=myy))
ggplot(testdat,aes(x=myx,y=myy))
g <- ggplot(testdat, aes(x = myx, y = myy))
geom_line(g)
g(0)+geom_lines
g
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim=c(-3,3)
)
g<-ggplot(aes(x=displ, y=hwy,color=factor(year)))
g<-ggplot(mpgaes(x=displ, y=hwy,color=factor(year)))
g<-ggplot(mpg,aes(x=displ, y=hwy,color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")
g+geom_point()+facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm",se=FALSE,size=2,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")
str(diamonds)
qplot(price,data=diamonds)
range(diamonds$price)
qplot(price,data="diamonds",binwidth=18497/30)
qplot(price,data=diamonds,binwidth=18497/30)
brk
counts
qplot(price,data=diamonds,binwidth=18497/30,fill=cut)
qplot(price,data=diamonds,geom="density")
qplot(price,data=diamonds,geom="density",color=cut)
qplot(carat,price,data=diamonds)
qplot(carat,price,data=diamonds,shape=cut)
qplot(carat,price,data=diamonds,color=cut)
qplot(carat,price,data=diamonds,color=cut,geom_smooth(method="lm"))
qplot(carat,price,data=diamonds,color=cut,geom_smooth="lm")
qplot(carat,price,data=diamonds,color=cut)+geom_smooth(method="lm")
qplot(carat,price,data=diamonds,color=cut)+geom_smooth(method="lm")+facets(.~cut)
qplot(carat,price,data=diamonds,color=cut,facets=.~cut)+geom_smooth(method="lm")
g<-ggplot(diamonds,aes(depth,price))
g
summary(g)
g+geom_point(alpha=1/3)
cutpoint<-quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE
)
cutpoints <- quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
cutpoint
CUTPOINTS
cutpoints
dimaonds$car2<-cut(diamonds$carat,cutpoints)
diamonds$car2<-cut(diamonds$carat,cutpoints)
ggplot(diamonds,aes(depth,price))
g <- ggplot(diamonds,aes(depth,price))
g + geom_point(alpha=1/3,facet_grid=cut~car2)
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm",size=3,color="pink")
ggplot(diamonds,aes(carat,price))+geom_boxplot()
ggplot(diamonds,aes(carat,price))+geom_boxplot()+facet_grid(.~cut)
dim(pm0)
pm0
head(pm0)
names(cnames)
cnames
strsplit(cnames,"|",fixed = TRUE)
cnames <- strsplit(cnames, "|", fixed = TRUE)
cbanes
head(cnames)
cnames
names(pm0)<-make.names(cnames[[1]][wcol])
pm0
head(pm0)
m$n
x0<-pm0$Sample.Value
str(x0)
is.na(x0)
mean(is.na(x0))
names(pm1)<-make.names(cnames[[1]][wcol])
dim(pm1)
x1<-pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative<-x1<0
sum(negative,na.rm=TRUE)
mean(negative, na.rm-TRUE)
mean(negative, na.rm=TRUE)
dates<-pm1$Date
str(dates)
dates<-as.character(dates)
dates <- as.Date(as.character(dates), "%Y%m%d")
dates
head(dates)
hist(dates[negative],"month")
str(site0)
intersect(site0,site1)
both <- intersect(site0, site1)
both
head(pm0)
cnt0<-subset(pm0, State.Code==36,couny.site %in% both)
cnt0<-subset(pm0, pm0$State.Code==36,pm0$couny.site %in% both)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt0 <- subset(pm1, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub<-subset(cnt0,COunty.Code=63 & Site.ID=2008)
pm0sub<-subset(cnt0,COunty.Code=63 & Site.ID==2008)
pm0sub <- subset(cnt0, County.Code==63 & Site.ID==2008)
pm1sub <- subset(cnt1, County.Code==63 & Site.ID==2008)
x0sub<-pm0sub$Sample.Value
x1sub<-pm1sub$Sample.Value
dates0<-as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1<-as.Date(as.character(pm1sub$Date),"%Y%m%d")
par(mfrow=c(1,2),mar=c(4,4,2,1))
plot(dates0,x0sub,pch=20)
abline(lwd=2,na.rm=TRUE)
abline(h = median(x0sub, na.rm = TRUE),lwd=2)
abline(h = median(x1sub, na.rm = TRUE),lwd=2)
plot(dates1, x1sub, pch = 20)
abline(h = median(x1sub, na.rm = TRUE),lwd=2)
range(x0sub,x1sub,na.rm=TRUE)
rng <- range(x0sub,x1sub,na.rm=TRUE)
rng
mno
mn0<-with(pm0, tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn0)
str(mn1)
mn1<-with(pm1, tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0<-data.frame(state=names(mn0),mean=mn0)
d1<-data.frame(state=names(mn1),mean=mn1)
merge(d0,d1,set="state")
mrg <- merge(d0, d1, by = "state")
dim(mrg)
head(mrg)
x1
with(mrg,plot(rep(1,52),mrg[,2],xlim=c(0.5,2.5)))
with(mrg,plot(rep(1,52),mrg[,2],xlim=c(0.5,2.5)))
with(mrg, points(rep(2, 52), mrg[, 3]))
segments(x,y,x,y\)
segements
segments(x,y,x,y,mrg)
segments(rep(1, 52), mrg[, 2], rep(2, 52), mrg[, 3])
mrg[mrg$mean.x < mrg$mean.y, ]
installed.packages(markdown)
installed.packages("markdown")
install.packages("markdown")
install.packages("knitr")
setwd("D:/Programs/R/WD/Assignments/Reproducable Research/Week 2/RepData_PeerAssessment1")
data<-read.csv("activity.csv")
data$day<-weekdays(as.date(activity$date))
activity$DateTime <- as.POSIXct(activity$date, format = "%Y-%m-%d")
##pulling out data without NAs
clean<-activity[!is.na(activity$steps),]
#summarising total steps per date
sumTable<-aggregate(activity$step ~ activity$date,FUN=sum)
colnames(sumTable)<-c("Date","Steps")
##Creating a histogram of total steps per day
hist(sumTable$Steps, breaks=5,xlab="Steps", main = "Total Steps per Day")
##Mean of steps
StepsMean<-mean(sumTable$Steps)
print(StepsMean)
##Median of steps
StepsMedian<-median(sumTable$Steps)
print(StepsMedian)
library(plyr)
library(ggplot2)
intervalSteps<-ddply(clean, .(interval), summarize, Avg=mean(steps))
plot<-ggplot(intervalSteps,aes(x=interval,y=Avg),xlab="Interval",ylab="Average Number of Steps")
p+geom_line()+xlab("Interval")+ylab("Average Number of Steps")+ggtitle("Average number of Steps per Interval")
setwd("D:/Programs/R/WD/Assignments/Reproducible Research/Week 2/RepData_PeerAssessment1")
data<-read.csv("activity.csv")
data$day<-weekdays(as.date(activity$date))
activity$DateTime <- as.POSIXct(activity$date, format = "%Y-%m-%d")
##pulling out data without NAs
clean<-activity[!is.na(activity$steps),]
#summarising total steps per date
sumTable<-aggregate(activity$step ~ activity$date,FUN=sum)
colnames(sumTable)<-c("Date","Steps")
##Creating a histogram of total steps per day
hist(sumTable$Steps, breaks=5,xlab="Steps", main = "Total Steps per Day")
##Mean of steps
StepsMean<-mean(sumTable$Steps)
print(StepsMean)
##Median of steps
StepsMedian<-median(sumTable$Steps)
print(StepsMedian)
library(plyr)
library(ggplot2)
intervalSteps<-ddply(clean, .(interval), summarize, Avg=mean(steps))
plot<-ggplot(intervalSteps,aes(x=interval,y=Avg),xlab="Interval",ylab="Average Number of Steps")
p+geom_line()+xlab("Interval")+ylab("Average Number of Steps")+ggtitle("Average number of Steps per Interval")
setwd("D:/Programs/R/WD/Assignments/Reproducable Research/Week 2/RepData_PeerAssessment1")
setwd("D:/Programs/R/WD/Assignments/Reproducible Research/Week 2/RepData_PeerAssessment1")
data<-read.csv("activity.csv")
data$day<-weekdays(as.date(activity$date))
activity$DateTime <- as.POSIXct(activity$date, format = "%Y-%m-%d")
##pulling out data without NAs
clean<-activity[!is.na(activity$steps),]
#summarising total steps per date
sumTable<-aggregate(activity$step ~ activity$date,FUN=sum)
colnames(sumTable)<-c("Date","Steps")
##Creating a histogram of total steps per day
hist(sumTable$Steps, breaks=5,xlab="Steps", main = "Total Steps per Day")
##Mean of steps
StepsMean<-mean(sumTable$Steps)
print(StepsMean)
##Median of steps
StepsMedian<-median(sumTable$Steps)
print(StepsMedian)
library(plyr)
library(ggplot2)
intervalSteps<-ddply(clean, .(interval), summarize, Avg=mean(steps))
plot<-ggplot(intervalSteps,aes(x=interval,y=Avg),xlab="Interval",ylab="Average Number of Steps")
p+geom_line()+xlab("Interval")+ylab("Average Number of Steps")+ggtitle("Average number of Steps per Interval")
## Max steps by interval
maxSteps<-max(intervalSteps$Avg)
## Interval with max avg number of steps
intervalSteps[intervalSteps$avg==maxSteps,1]
library(ggplot2)
if(!file.exists('activity.csv')){
unzip('activity.zip')
}
activityData <- read.csv('activity.csv')
data$day<-weekdays(as.date(activity$date))
activity$DateTime <- as.POSIXct(activity$date, format = "%Y-%m-%d")
library(ggplot2)
if(!file.exists('activity.csv')){
unzip('activity.zip')
}
activity <- read.csv('activity.csv')
data$day<-weekdays(as.date(activity$date))
activity$DateTime <- as.POSIXct(activity$date, format = "%Y-%m-%d")
library(ggplot2)
library(ggplot2)
if(!file.exists('activity.csv')){
unzip('activity.zip')
}
activity <- read.csv('activity.csv')
data$day<-weekdays(as.date(activity$date))
activity$DateTime <- as.POSIXct(activity$date, format = "%Y-%m-%d")
library(plyr)
library(ggplot2)
if(!file.exists('activity.csv')){
unzip('activity.zip')
}
activity <- read.csv('activity.csv')
data$day<-weekdays(as.date(activity$date))
activity$DateTime <- as.POSIXct(activity$date, format = "%Y-%m-%d")
if(!file.exists('activity.csv')){
unzip('activity.zip')
}
activity <- read.csv('activity.csv')
data$day<-weekdays(as.Date(activity$date))
activity$DateTime <- as.POSIXct(activity$date, format = "%Y-%m-%d")
?weekdays
?as.POSIXct
sumTable<-aggregate(activity$step ~ activity$date,FUN=sum)
colnames(sumTable)<-c("Date","Steps")
StepsMean<-mean(sumTable$Steps)
StepsMean
sumTable
hist(sumTable)
ggplot(sumTable)
ggplot(sumTable, aes(Date,StepsMean))
colnames(sumTable)<-c("Date","Steps")
ggplot(sumTable, aes(Date,Steps))
ggplot(sumTable, aes(Date,Steps))+geom_bar(stat="identity", colour="steelblue", fill="steelblue", width = 0.7)
ggplot(sumTable, aes(Date,Steps))+geom_bar(stat="identity", colour="steelblue", fill="steelblue", width = 0.7)+facet_grid(.~day, scales="free")+labs(title = "Histogram of Total Number of Steps Taken Each Day", x = "Date", y = "Total number of steps")
ggplot(sumTable, aes(Date,Steps))+geom_bar(stat="identity", colour="steelblue", fill="steelblue", width = 0.7)+facet_grid(.~Date, scales="free")+labs(title = "Histogram of Total Number of Steps Taken Each Day", x = "Date", y = "Total number of steps")
ggplot(sumTable, aes(Date,Steps))+geom_bar(stat="identity", colour="steelblue", fill="steelblue", width = 0.7)+facet_grid(.~Date, scales="free")+labs(title = "Histogram of Total Number of Steps Taken Each Day", x = "Date", y = "Total number of steps")
ggplot(sumTable, aes(Date,Steps))+geom_histogram(stat="identity", colour="steelblue", fill="steelblue", width = 0.7)+facet_grid(.~Date, scales="free")+labs(title = "Histogram of Total Number of Steps Taken Each Day", x = "Date", y = "Total number of steps")
qplot(sumTable, geom="histogram")
averagedaily[which.max(averagedaily$steps),]
averagedaily<-aggregate(x=list(steps=data$steps), by=list(intervadata$interval), FUN=mean, na.rm=TRUE)
averagedaily<-aggregate(x=list(steps=data$steps), by=list(interval=data$interval), FUN=mean, na.rm=TRUE)
ggplot(data=averagedaily, aes(x=interval,y=steps))+geom_line()+ xlab("5-Minute Interval")+ylab("Average Number of Steps Taken")
averagedaily[which.max(averagedaily$steps),]
qplot(totalsteps,binwidth=1000, xlab="Total Number of Steps Taken Each Day")
library(ggplot2)
if(!file.exists('activity.csv')){
unzip('activity.zip')
}
activity <- read.csv('activity.csv')
totalsteps<-tapply(activity$steps,data$date, FUN=sum, na.rm=TRUE)
qplot(totalsteps,binwidth=1000, xlab="Total Number of Steps Taken Each Day")
mean(totalsetps,na.rm=TRUE)
qplot(totalsteps,binwidth=1000, xlab="Total Number of Steps Taken Each Day")
mean(totalsteps,na.rm=TRUE)
median(totalsteps, na.rm=TRUE)
library(ggplot2)
if(!file.exists('activity.csv')){
unzip('activity.zip')
}
activity <- read.csv('activity.csv')
totalsteps<-tapply(activity$steps,data$date, FUN=sum, na.rm=TRUE)
qplot(totalsteps,binwidth=1000, xlab="Total Number of Steps Taken Each Day")
mean(totalsteps,na.rm=TRUE)
median(totalsteps, na.rm=TRUE)
library(ggplot2)
if(!file.exists('activity.csv')){
unzip('activity.zip')
}
activity <- read.csv('activity.csv')
totalsteps<-tapply(activity$steps,data$date, FUN=sum, na.rm=TRUE)
averagesteps<-aggregate(activity$steps~activity$date, FUN=mean, na.rm=TRUE)
library(ggplot2)
if(!file.exists('activity.csv')){
unzip('activity.zip')
}
activity <- read.csv('activity.csv')
totalsteps<-tapply(activity$steps,data$date, FUN=sum, na.rm=TRUE)
averagesteps<-aggregate(activity$steps~activity$date, FUN=mean, na.rm=TRUE)
qplot(totalsteps,binwidth=1000, xlab="Total Number of Steps Taken Each Day")
qplot(averagesteps,binwidth=500, xlab="Total Number of Steps Taken Each Day")
qplot(totalsteps,binwidth=1000, xlab="Total Number of Steps Taken Each Day")
qplot(averagesteps$`activity$steps`,binwidth=500, xlab="Total Number of Steps Taken Each Day")
mean(totalsteps,na.rm=TRUE)
median(totalsteps, na.rm=TRUE)
qplot(totalsteps,binwidth=1000, xlab="Total Number of Steps Taken Each Day")
qplot(averagesteps$`activity$steps`,binwidth=10, xlab="Total Number of Steps Taken Each Day")
mean(totalsteps,na.rm=TRUE)
median(totalsteps, na.rm=TRUE)
library(ggplot2)
if(!file.exists('activity.csv')){
unzip('activity.zip')
}
activity <- read.csv('activity.csv')
totalsteps<-tapply(activity$steps,data$date, FUN=sum, na.rm=TRUE)
averagesteps<-aggregate(activity$steps~activity$date, FUN=mean, na.rm=TRUE)
qplot(totalsteps,binwidth=1000, xlab="Total Number of Steps Taken Each Day")
qplot(averagesteps$`activity$steps`, averagesteps$`activity$date`,binwidth=10, xlab="Total Number of Steps Taken Each Day")
mean(totalsteps,na.rm=TRUE)
median(totalsteps, na.rm=TRUE)
